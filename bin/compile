#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

source $BP_DIR/lib/environment.sh
export_env_dir "$ENV_DIR"

IFS='|' read -r -a build_subfolders <<< "$BUILD_SUBFOLDER"
echo "Detected ${#build_subfolders[@]} build_subfolders"

for build_subfolder in "${build_subfolders[@]}"
do
    if [ "$build_subfolder" = "MAIN" ]; then
        mod=""
    else
        mod="$build_subfolder"
    fi
    echo "Creating .npmrc file in $mod"

    echo "" >> $BUILD_DIR$mod/.npmrc
    echo "@branchpolitics:registry=https://node.bit.cloud" >> $BUILD_DIR$mod/.npmrc
    echo "//node.bitsrc.io/:_authToken=$BIT_NPM_AUTH_TOKEN" >> $BUILD_DIR$mod/.npmrc
    echo "//node.bit.cloud/:_authToken=$BIT_NPM_AUTH_TOKEN" >> $BUILD_DIR$mod/.npmrc

    if [ -n "$GL_AUTH_TOKEN" ]; then
        echo "GL_AUTH_TOKEN is set, adding @triumphant registry to .npmrc"
        echo "@triumphant:registry=https://gitlab.com/api/v4/groups/4597112/-/packages/npm/" >> $BUILD_DIR$mod/.npmrc
        echo "//gitlab.com/api/v4/groups/4597112/-/packages/npm/:_authToken=${GL_AUTH_TOKEN}" >> $BUILD_DIR$mod/.npmrc
    else
        echo "GL_AUTH_TOKEN is not set, skipping @triumphant registry"
    fi

    cat $BUILD_DIR$mod/.npmrc
done

# echo "Creating .npmrc file in $$BUILD_SUBFOLDER"

# echo "" >> $BUILD_DIR$BUILD_SUBFOLDER/.npmrc
# echo "@branchpolitics:registry=https://node.bit.cloud" >> $BUILD_DIR$BUILD_SUBFOLDER/.npmrc
# echo "//node.bitsrc.io/:_authToken=$BIT_NPM_AUTH_TOKEN" >> $BUILD_DIR$BUILD_SUBFOLDER/.npmrc
# echo "//node.bit.cloud/:_authToken=$BIT_NPM_AUTH_TOKEN" >> $BUILD_DIR$BUILD_SUBFOLDER/.npmrc

# cat $BUILD_DIR$BUILD_SUBFOLDER/.npmrc
